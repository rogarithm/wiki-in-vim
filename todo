vim에서 쓸 수 있는 wiki 구현하기

설치
- 수동으로 스크립트 로드해서 설치하기
 - :source wiki.vim 스크립트 위치가 현재 디렉토리일 때
- 플러그인으로 설치하기
 - 궁금한 점: 파일 위치, 디렉토리 구조, 디렉토리 별로 넣어야 하는 파일

구현할 기능
- 링크 명세
 - 링크명 형식은 camel case
 - 모든 위키 파일은 프로젝트 최상위 디렉토리 바로 밑 wiki 디렉토리에 둔다

- 위키 파일 생성
 - 동일한 이름의 위키 파일이 이미 있거나, [:CamelCasedKeyword:] 형식 문자열 위에 커서를 두고 단축키를 눌렀을 경우
  - 여기서는 [:CamelCasedKeyword:] 형식 문자열이지만 위키 파일이 없는 경우는 고려하지 않고 있다
  - '주어진 이름의 위키 파일이 이미 있다' 라고 말해주고 위키 파일을 만들지 않는다
 - 카멜케이스 형식 문자열 위에 커서를 두고 단축키를 누르면 그 이름으로 파일을 만든다
  - 카멜케이스 정규표현식을 다듬는다 (ex. AbcA인 경우를 제외할 수 있어야 한다)

- 링크에 연결된 파일로 이동
 - 링크 위에 커서를 올리고 단축키를 누르면 그 링크에 연결된 파일로 이동한다
 - [:CamelCasedKeyword:] 형식이 아닐 경우 위키 파일이 없다고 알려준다
 - 기존 페이지에서 링크에 연결된 페이지로 이동
  - execute "normal! " . "e " . a:pageName 같은 식으로 처리하면 어떨까
 - 링크에 연결된 페이지로 이동한 상태에서 이전 페이지로 이동
  - <C-o>로 모든 케이스를 처리할 수 있나?

- 인덱스 파일 생성
 - 최상위 문서 역할을 할 인덱스 파일을 생성한다
 - 위키로 쓰기 위해 꼭 필요한 것은 아니지만, 링크 간 연결되도록 하려면 인덱스 파일이 있는 게 용이해 보인다
 - 인덱스 파일의 이름은 꼭 index가 아니어도 된다

- 인덱스 파일 수정
 - 인덱스 파일에서 수정한 내용을 실제 파일 시스템에 적용할 수 있어야 한다
 - 다음과 같은 수정 사항이 있을 것 같다
  - 링크 변경
   - 링크 이름 변경
   - 파일명만 변경
   - 파일 경로를 변경
   - 파일명과 파일 경로를 변경
  - 삭제
   - 위키 파일 삭제
   - 링크 삭제

- 버전 관리 통합
 - 단순히 위키 디렉토리를 git 디렉토리로 만드는 정도면 충분할까?
 - 일반적인 프로젝트 버전관리하는 것처럼 하면 되나?
 - 동기화하려면 서버가 있어야 한다. 공개해도 상관없는 파일이면 깃허브에 둬도 괜찮을 것 같다

exe ":function Meow() \n echom \"Meow!!\" \n endfunction"

I
Am
Here
AndThere
WhereICanBe
AnythingSpecial
